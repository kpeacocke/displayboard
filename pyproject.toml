

[tool.poetry]
name = "displayboard"
version = "0.1.0"
description = "A randomized soundscape engine for Warhammer Age of Sigmar display boards"
authors = ["Kristian Peacocke <krpeacocke@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [
  { include = "displayboard", from = "src" }
]
include = [
  "src/displayboard/py.typed",
  "src/assets/sounds/**",
  "src/assets/video/**",
]



[tool.poetry.dependencies]
python = "^3.9"
pygame = "^2.5.2"
python-dotenv = "^1.1.0"
rpi-ws281x = { version = "^5.0.0", markers = "sys_platform == 'linux'" }  # Raspberry Pi LED driver on Linux only
adafruit-circuitpython-neopixel = { version = "^6.3.11", markers = "sys_platform == 'linux'" }  # NeoPixel wrapper on Linux only
gpiozero = "^2.0.1"  # GPIO control via gpiozero
pigpio = "^1.78"

rpi-gpio = { version = "*", markers = "sys_platform == 'linux'" }  # Direct GPIO access for Pi only




[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
coverage = "^7.8.0"
mypy = "^1.15.0"
ruff = "^0.12.0"
black = "^25.1.0"
pre-commit = "^4.2.0"
pytest-cov = "^7.0.0"
pyfakefs = "^5.8.0"



[tool.poetry.scripts]
play-video = "displayboard.video_loop:main"
displayboard = "displayboard.main:main"

[tool.coverage.run]
branch = true
source = ["src/displayboard"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
  "if __name__ == .__main__.",
]

[tool.mypy]
strict = true
ignore_missing_imports = true
exclude = "tests/.*"
allow_untyped_decorators = true
mypy_path = "typings"

[tool.ruff]
line-length = 100
[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
target-version = "py39"
fix = true

[tool.pytest.ini_options]
markers = [
    "no_autosleep: disables the patch_time_sleep fixture for this test"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
